import java.util.*;
public class Solution {
    public static List<List<Integer>> fourSum(int []nums, int target) {
        // Write your code here.

        List<List<Integer>> result = new ArrayList<>();
        int n = nums.length;

        // Sort the array to use two-pointer approach
        Arrays.sort(nums);

        // Iterate through the array to find the first element
        for (int i = 0; i < n - 3; i++) {
            // Skip duplicate elements for the first element
            if (i > 0 && nums[i] == nums[i - 1]) continue;

            // Iterate through the array to find the second element
            for (int j = i + 1; j < n - 2; j++) {
                // Skip duplicate elements for the second element
                if (j > i + 1 && nums[j] == nums[j - 1]) continue;

                int left = j + 1; // Left pointer
                int right = n - 1; // Right pointer

                // Use two-pointer technique for the third and fourth elements
                while (left < right) {
                    int sum = nums[i] + nums[j] + nums[left] + nums[right];

                    // If the sum matches the target, add the quadruplet
                    if (sum == target) {
                        result.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));

                        // Skip duplicate elements for the third element
                        while (left < right && nums[left] == nums[left + 1]) left++;
                        // Skip duplicate elements for the fourth element
                        while (left < right && nums[right] == nums[right - 1]) right--;

                        // Move the pointers inward
                        left++;
                        right--;
                    } 
                    // If the sum is less than the target, move the left pointer
                    else if (sum < target) {
                        left++;
                    } 
                    // If the sum is greater than the target, move the right pointer
                    else {
                        right--;
                    }
                }
            }
        }

        return result;
    }

    public static void main(String[] args) {
        // Example input
        int[] nums = {2, 2, 2, 2, 1, 3};
        int target = 8;

        // Calling the fourSum method
        List<List<Integer>> result = fourSum(nums, target);

        // Printing the result
        System.out.println(result.size());  // Output: 2 (unique quadruplets)
    }
}
    
